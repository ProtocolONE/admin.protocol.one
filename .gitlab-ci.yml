variables:
  K8S_API_URL: https://31.25.227.71:6443

stages:
  - build
  - push
  - deploy

build:
  stage: build
  script:
    - docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID .
    - docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:"$CI_COMMIT_REF_SLUG"-nginx.$CI_PIPELINE_ID -f Dockerfile.nginx .

push:
  stage: push
  variables:
    GIT_STRATEGY: none
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  script:
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:"$CI_COMMIT_REF_SLUG"-nginx.$CI_PIPELINE_ID

deploy_production:
  stage: deploy
  environment:
    name: production
  script:
    - docker run
      --rm
      -v $PWD/.helm:/.helm
      -e "K8S_API_URL=$K8S_API_URL"
      -e "K8S_CI_TOKEN=$K8S_CI_TOKEN"
      -e "CI_PROJECT_PATH_SLUG=$CI_PROJECT_PATH_SLUG"
      -e "CI_ENVIRONMENT_NAME=$CI_ENVIRONMENT_NAME"
      -e "CI_REGISTRY=$CI_REGISTRY"
      -e "CI_PROJECT_NAMESPACE=$CI_PROJECT_NAMESPACE"
      -e "CI_PROJECT_NAME=$CI_PROJECT_NAME"
      -e "CI_COMMIT_REF_SLUG=$CI_COMMIT_REF_SLUG"
      -e "CI_PIPELINE_ID=$CI_PIPELINE_ID"
      -e "CI_DEPLOY_USER=$CI_DEPLOY_USER"
      -e "CI_DEPLOY_PASSWORD=$CI_DEPLOY_PASSWORD"
      p1hub/kubernetes-helm:2.11.0
      /bin/sh -c
      'kubectl config set-cluster k8s --insecure-skip-tls-verify=true --server=$K8S_API_URL &&
      kubectl config set-credentials ci --token=$K8S_CI_TOKEN &&
      kubectl config set-context ci --cluster=k8s --user=ci &&
      kubectl config use-context ci &&
      helm init --client-only &&
      helm upgrade --install $CI_PROJECT_PATH_SLUG .helm
        --set backend.image=$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
        --set backend.imageTag=$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
        --set frontend.image=$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
        --set frontend.imageTag="$CI_COMMIT_REF_SLUG"-nginx.$CI_PIPELINE_ID
        --wait
        --timeout 180
        --debug
        --namespace $CI_PROJECT_PATH_SLUG-$CI_ENVIRONMENT_NAME ||
      (helm history --max 2 $CI_PROJECT_PATH_SLUG | head -n 2 | tail -n 1 | awk "{print \$1}" | xargs helm rollback $CI_PROJECT_PATH_SLUG && exit 1)'
  only:
  - master
  when: manual


review:
  stage: deploy
  environment:
    name: admin-$CI_COMMIT_REF_NAME
    url: http://$CI_ENVIRONMENT_SLUG.tst.protocol.one
    on_stop: stop_review
  script:
    - docker run
      --rm
      -v $PWD/.helm:/.helm
      -e "K8S_API_URL=$K8S_API_URL"
      -e "K8S_CI_TOKEN=$K8S_CI_TOKEN"
      -e "CI_PROJECT_PATH_SLUG=$CI_PROJECT_PATH_SLUG"
      -e "CI_ENVIRONMENT_NAME=$CI_ENVIRONMENT_NAME"
      -e "CI_ENVIRONMENT_SLUG=admin-$CI_ENVIRONMENT_SLUG"
      -e "CI_REGISTRY=$CI_REGISTRY"
      -e "CI_PROJECT_NAMESPACE=$CI_PROJECT_NAMESPACE"
      -e "CI_PROJECT_NAME=$CI_PROJECT_NAME"
      -e "CI_COMMIT_REF_SLUG=$CI_COMMIT_REF_SLUG"
      -e "CI_PIPELINE_ID=$CI_PIPELINE_ID"
      -e "CI_DEPLOY_USER=$CI_DEPLOY_USER"
      -e "CI_DEPLOY_PASSWORD=$CI_DEPLOY_PASSWORD"
      p1hub/kubernetes-helm:2.11.0
      /bin/sh -c
      'kubectl config set-cluster k8s --insecure-skip-tls-verify=true --server=$K8S_API_URL &&
      kubectl config set-credentials ci --token=$K8S_CI_TOKEN &&
      kubectl config set-context ci --cluster=k8s --user=ci &&
      kubectl config use-context ci &&
      helm init --client-only &&
      kubectl get namespace $CI_ENVIRONMENT_SLUG ||
      kubectl create namespace $CI_ENVIRONMENT_SLUG &&
      helm upgrade --install $CI_ENVIRONMENT_SLUG .helm
        --set backend.image=$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
        --set backend.imageTag=$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
        --set frontend.image=$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
        --set frontend.imageTag="$CI_COMMIT_REF_SLUG"-nginx.$CI_PIPELINE_ID
        --set replicas=1
        --set ingress.hostname=$CI_ENVIRONMENT_SLUG.tst.protocol.one
        --wait
        --timeout 180
        --debug
        --namespace $CI_ENVIRONMENT_SLUG'
  only:
    - branches
  except:
    - master

stop_review:
  image: p1hub/kubernetes-helm:2.11.0
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - docker run
      --rm
      -e "K8S_API_URL=$K8S_API_URL"
      -e "K8S_CI_TOKEN=$K8S_CI_TOKEN"
      -e "CI_PROJECT_PATH_SLUG=$CI_PROJECT_PATH_SLUG"
      -e "CI_ENVIRONMENT_NAME=$CI_ENVIRONMENT_NAME"
      -e "CI_ENVIRONMENT_SLUG=admin-$CI_ENVIRONMENT_SLUG"
      -e "CI_REGISTRY=$CI_REGISTRY"
      -e "CI_PROJECT_NAMESPACE=$CI_PROJECT_NAMESPACE"
      -e "CI_PROJECT_NAME=$CI_PROJECT_NAME"
      -e "CI_COMMIT_REF_SLUG=$CI_COMMIT_REF_SLUG"
      -e "CI_PIPELINE_ID=$CI_PIPELINE_ID"
      p1hub/kubernetes-helm:2.11.0
      /bin/sh -c
      'kubectl config set-cluster k8s --insecure-skip-tls-verify=true --server=$K8S_API_URL &&
      kubectl config set-credentials ci --token=$K8S_CI_TOKEN &&
      kubectl config set-context ci --cluster=k8s --user=ci &&
      kubectl config use-context ci &&
      helm init --client-only &&
      helm delete --purge $CI_ENVIRONMENT_SLUG &&
      kubectl delete namespace $CI_ENVIRONMENT_SLUG'
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  when: manual
  only:
    - branches
  except:
    - master
